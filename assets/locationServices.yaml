openapi: 3.0.0
info:
  title: Location Services API
  description: Provides endpoints for location tracking and sharing during emergencies.
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/2541773_1/location-api/1.0.0
  description: SwaggerHub API Auto Mocking
paths:
  /locations:
    get:
      summary: Retrieve locations of all users
      description: Get the real-time locations of all users stored in the Firebase database.
      responses:
        "200":
          description: List of all user locations
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/LocationData'
        "500":
          description: Internal server error

    post:
      summary: Share a user's location
      description: Add a user's location to the database.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationDataInput'
      responses:
        "201":
          description: Location shared successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationData'
        "400":
          description: User ID is required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error

  /locations/{user_id}:
    delete:
      summary: Stop sharing a user's location
      description: Delete a user's location from the database.
      parameters:
        - name: user_id
          in: path
          required: true
          description: The ID of the user whose location is to be deleted
          schema:
            type: string
      responses:
        "204":
          description: Location sharing stopped successfully
        "400":
          description: User ID is required for deletion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: User location not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error

components:
  schemas:
    LocationData:
      type: object
      properties:
        user_id:
          type: string
          example: "user_123"
        latitude:
          type: number
          format: float
          example: 34.0522
        longitude:
          type: number
          format: float
          example: -118.2437
        timestamp:
          type: string
          format: date-time
          example: "2024-08-25T14:15:00Z"

    LocationDataInput:
      type: object
      required:
        - user_id
        - latitude
        - longitude
      properties:
        user_id:
          type: string
          example: "user_123"
        latitude:
          type: number
          format: float
          example: 34.0522
        longitude:
          type: number
          format: float
          example: -118.2437
        timestamp:
          type: string
          format: date-time
          example: "2024-08-25T14:15:00Z"

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: "User ID is required"

